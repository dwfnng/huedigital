import { useState } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Tabs, TabsList, TabsTrigger, TabsContent } from "@/components/ui/tabs";
import { Crown, Building2, Map, Scale } from "lucide-react";
import RolePlayGame from "@/components/games/RolePlayGame";
import BuildingGame from "@/components/games/BuildingGame";
import TreasureHuntGame from "@/components/games/TreasureHuntGame";
import MinisterGame from "@/components/games/MinisterGame";

function GameCard({ icon: Icon, title, description, onClick }: { 
  icon: any; 
  title: string;
  description: string;
  onClick: () => void;
}) {
  return (
    <Card className="cursor-pointer hover:bg-cyan-50 transition-colors shadow-sm hover:shadow-md" onClick={onClick}>
      <CardContent className="p-6">
        <div className="flex items-start gap-4">
          <div className="p-2 bg-cyan-500/10 rounded-lg">
            <Icon className="h-6 w-6 text-cyan-700" />
          </div>
          <div>
            <h3 className="font-semibold mb-2 text-cyan-900">{title}</h3>
            <p className="text-sm text-cyan-700/80">{description}</p>
          </div>
        </div>
      </CardContent>
    </Card>
  );
}

export default function GamePage() {
  const [selectedGame, setSelectedGame] = useState<string | null>(null);

  const games = {
    role_play: {
      title: "Nh·∫≠p vai vua Gia Long",
      description: "ƒê∆∞a ra quy·∫øt ƒë·ªãnh x√¢y d·ª±ng kinh ƒë√¥ Hu·∫ø v·ªõi c√°c l·ª±a ch·ªçn v·ªÅ v·ªã tr√≠, phong th·ªßy, ki·∫øn tr√∫c.",
      component: <RolePlayGame />
    },
    minister: {
      title: "Quan th·∫ßn th·ªùi Minh M·∫°ng",
      description: "Gi√∫p nh√† vua x·ª≠ l√Ω m·ªôt v·ª• √°n trong tri·ªÅu ƒë√¨nh, √°p d·ª•ng lu·∫≠t ph√°p th·ªùi Nguy·ªÖn.",
      component: <MinisterGame />
    },
    building: {
      title: "ƒêi·ªán C·∫ßn Ch√°nh",
      description: "D·ª±ng l·∫°i ƒêi·ªán C·∫ßn Ch√°nh b·∫±ng m√¥ h√¨nh 3D v√† so s√°nh v·ªõi ki·∫øn tr√∫c g·ªëc. T√¨m hi·ªÉu v·ªÅ ngh·ªá thu·∫≠t ki·∫øn tr√∫c cung ƒë√¨nh Hu·∫ø.",
      component: <BuildingGame />
    },
    treasure: {
      title: "M·∫≠t th∆∞ c·ªßa vua T·ª± ƒê·ª©c",
      description: "Gi·∫£i m√£ c√°c c√¢u ƒë·ªë l·ªãch s·ª≠ ƒë·ªÉ t√¨m ki·∫øm b·∫£o v·∫≠t ho√†ng cung. Kh√°m ph√° nh·ªØng b√≠ m·∫≠t th√∫ v·ªã v·ªÅ C·ªë ƒë√¥ Hu·∫ø.",
      component: <TreasureHuntGame />
    }
  };

  if (selectedGame && games[selectedGame as keyof typeof games]) {
    return (
      <div className="container mx-auto p-4">
        <button 
          onClick={() => setSelectedGame(null)}
          className="mb-6 text-primary hover:underline flex items-center gap-2"
        >
          ‚Üê Quay l·∫°i danh s√°ch
        </button>
        {games[selectedGame as keyof typeof games].component}
      </div>
    );
  }

  return (
    <div className="container mx-auto p-4">
      <div className="max-w-4xl mx-auto">
        <div className="page-header">
          <div className="page-header-content">
            <h1>Game gi√°o d·ª•c</h1>
            <p className="text-muted-foreground">
          Kh√°m ph√° l·ªãch s·ª≠ v√† vƒÉn h√≥a Hu·∫ø qua c√°c tr√≤ ch∆°i t∆∞∆°ng t√°c
        </p>

        <Tabs defaultValue="role-play" className="space-y-6">
          <TabsList className="w-full">
            <TabsTrigger value="role-play" className="flex-1">Nh·∫≠p vai l·ªãch s·ª≠</TabsTrigger>
            <TabsTrigger value="build" className="flex-1">X√¢y d·ª±ng 3D</TabsTrigger>
            <TabsTrigger value="treasure" className="flex-1">Truy t√¨m kho b√°u</TabsTrigger>
          </TabsList>

          <TabsContent value="role-play" className="space-y-4">
            <GameCard
              icon={Crown}
              title="Nh·∫≠p vai vua Gia Long"
              description="ƒê∆∞a ra quy·∫øt ƒë·ªãnh x√¢y d·ª±ng kinh ƒë√¥ Hu·∫ø v·ªõi c√°c l·ª±a ch·ªçn v·ªÅ v·ªã tr√≠, phong th·ªßy, ki·∫øn tr√∫c."
              onClick={() => setSelectedGame('role_play')}
            />
            <GameCard
              icon={Scale}
              title="Quan th·∫ßn th·ªùi Minh M·∫°ng"
              description="Gi√∫p nh√† vua x·ª≠ l√Ω m·ªôt v·ª• √°n trong tri·ªÅu ƒë√¨nh, √°p d·ª•ng lu·∫≠t ph√°p th·ªùi Nguy·ªÖn."
              onClick={() => setSelectedGame('minister')}
            />
          </TabsContent>

          <TabsContent value="build" className="space-y-4">
            <GameCard
              icon={Building2}
              title="ƒêi·ªán C·∫ßn Ch√°nh"
              description="D·ª±ng l·∫°i ƒêi·ªán C·∫ßn Ch√°nh b·∫±ng m√¥ h√¨nh 3D v√† so s√°nh v·ªõi ki·∫øn tr√∫c g·ªëc. T√¨m hi·ªÉu v·ªÅ ngh·ªá thu·∫≠t ki·∫øn tr√∫c cung ƒë√¨nh Hu·∫ø."
              onClick={() => setSelectedGame('building')}
            />
          </TabsContent>

          <TabsContent value="treasure" className="space-y-4">
            <GameCard
              icon={Map}
              title="M·∫≠t th∆∞ c·ªßa vua T·ª± ƒê·ª©c"
              description="Gi·∫£i m√£ c√°c c√¢u ƒë·ªë l·ªãch s·ª≠ ƒë·ªÉ t√¨m ki·∫øm b·∫£o v·∫≠t ho√†ng cung. Kh√°m ph√° nh·ªØng b√≠ m·∫≠t th√∫ v·ªã v·ªÅ C·ªë ƒë√¥ Hu·∫ø."
              onClick={() => setSelectedGame('treasure')}
            />
          </TabsContent>
        </Tabs>

        <div className="mt-8 text-center text-sm text-muted-foreground">
          <p>üöß C√°c tr√≤ ch∆°i kh√°c ƒëang ƒë∆∞·ª£c ph√°t tri·ªÉn v√† s·∫Ω s·ªõm ra m·∫Øt.</p>
          <p>H√£y quay l·∫°i sau ƒë·ªÉ tr·∫£i nghi·ªám th√™m nhi·ªÅu tr√≤ ch∆°i m·ªõi!</p>
        </div>
      </div>
    </div>
  );
}